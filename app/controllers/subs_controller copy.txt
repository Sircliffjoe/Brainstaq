class SubsController < ApplicationController
  before_action :authenticate_user!
  
  #load_and_authorize_resource :sub
  before_action :set_sub, only: [:activate_sub, :deactivate_sub, :update, :destroy]
  before_action :in_check
  
  def in_check
    if user_signed_in?
      if current_user.sub
        if current_user.sub.status == "inactive" ||  current_user.sub.status == nil
          redirect_to new_transaction_path, notice: 'You have no active subscription'
        else
          redirect_to dashboard_path(current_user.full_name)
        end
      end
    end
  end
  
  # GET /subs
  # GET /subs.json
  
  def index  
  end

  def show
  end

  def activate_sub
    @sub.update(status: 1)
    redirect_to @sub, notice: 'Subscription was successfully activated.' 
  end

  def deactivate_sub
    @sub.update(status: 0)
    redirect_to @sub, notice: 'Subscription was successfully deactivated.'    
  end

  # GET /subs/new
  def new
  end

  # GET /subs/1/edit
  def edit
  end

  # POST /subs
  # POST /subs.json
  def create
    @sub = Sub.new(sub_params)
    @sub.user_id = current_user.id
    #current_user.sub = @sub
    @sub.status = 0
    @sub.save
    respond_to do |format|
      if @sub.save
        format.html { redirect_to @sub, notice: 'Subscription successfully created!' }
        format.json { render :show, status: :created, location: @sub }
      else
        format.html { render :new }
        format.json { render json: @sub.errors, status: :unprocessable_entity }
      end
    end
  end

  # PATCH/PUT /subs/1
  # PATCH/PUT /subs/1.json
  def update
    respond_to do |format|
      if @sub.update(sub_params)
        format.html { redirect_to @sub, notice: 'Subscription successfully updated!' }
        format.json { render :show, status: :ok, location: @sub }
      else
        format.html { render :edit }
        format.json { render json: @sub.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /subs/1
  # DELETE /subs/1.json
  def destroy
    @sub.destroy
    respond_to do |format|
      format.html { redirect_to subs_url, notice: 'Subscription successfully destroyed!' }
      format.json { head :no_content }
    end
  end

  private

  # Use callbacks to share common setup or constraints between actions.
  def set_sub
    @sub = Sub.find(params[:id])
  end
  def sub_params
    params.require(:sub)
  end
end
