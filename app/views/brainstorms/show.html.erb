<% content_for :title, "Brainstorm" %>

<!-- start of page-header -->
<section class="page-header bg-light-gray has-shapes has-bg-brash bg-brash-bottom" style="background-image: url(<%= image_path "banner.svg" %>)">
  <div class="container h-100">
    <div class="row d-flex align-items-center h-100">
      <div class="col-md-12 text-center">
        <h2 class="h1 font-weight-bold">Brainstorm Session</h2>
        <nav class="mt-15" aria-label="breadcrumb">
          <ol class="breadcrumb font-weight-bold bg-transparent p-0 justify-content-center">
            <li class="breadcrumb-item"><%= link_to :back, class: "text-black-300" %></li>
            <li class="breadcrumb-item text-primary" aria-current="page">Brainstorm Session</li>
          </ol>
        </nav>
      </div>
    </div>
  </div>

  <div class="shape-1 bg-secondary shape-xs rounded-circle"></div>
  <div class="shape-2 bg-primary shape-xs-2 rounded-circle"></div>
  <div class="shape-3 bg-primary shape-sm-2 rounded-circle"></div>
  <div class="shape-4 bg-tertiary shape-xs rounded-circle"></div>
  <div class="shape-5 bg-tertiary shape-xs rounded-circle"></div>
  <div class="shape-6 bg-primary shape-sm rounded-circle"></div>
  <div class="shape-7 bg-primary shape-xs-2 rounded-circle"></div>
  <div class="shape-8 bg-secondary shape-xs rounded-circle"></div>
</section>
<!-- end of page-header -->

<div class="row justify-content-center" style="padding-top: 50px;">
  <div class="col-lg-9 col-lg-7">
    <%= render 'nav' %>
    <%# <%= render 'dev_nav' if Rails.env.development? %>
    <%= render 'sessions/names/form', brainstorm: @brainstorm, session: @session %>
    <div class="hidden" id="conception">
      <%= render 'concepte' %>
    </div>
    <div class="hidden" id="setup">
      <div id="setup_participant">
        <%= render 'setup_participant' %>
      </div>
      <div id="setup_facilitator">
        <%= render 'setup_facilitator' %>
      </div>
    </div>

    <div class="hidden" id="time_is_up" onclick="this.classList.add('hidden')">
      <%= render 'time_is_up' %>
    </div>
    <div class="hidden" id="vote">
      <%= render 'vote' %>
    </div>
    <div class="hidden" id="voting_done">
      <%= render 'voting_done' %>
      <%= render 'brainstorms/emails/form' %>
    </div>
  </div>
</div>

<style>
.check-icon {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' version='1.1' id='Check' x='0px' y='0px' viewBox='0 0 20 20' enable-background='new 0 0 20 20' xml:space='preserve'%3E%3Cpath fill='%23000000' d='M8.294,16.998c-0.435,0-0.847-0.203-1.111-0.553L3.61,11.724c-0.465-0.613-0.344-1.486,0.27-1.951 c0.615-0.467,1.488-0.344,1.953,0.27l2.351,3.104l5.911-9.492c0.407-0.652,1.267-0.852,1.921-0.445 c0.653,0.406,0.854,1.266,0.446,1.92L9.478,16.34c-0.242,0.391-0.661,0.635-1.12,0.656C8.336,16.998,8.316,16.998,8.294,16.998z' /%3E%3C/svg%3E");
}

.bg-pattern {
  background: #feeceb;
  background-image:
    radial-gradient(#cbbcbc 9%, transparent 0),
    radial-gradient(#cbbcbc 9%, transparent 0);
  background-size: 60px 60px;
  background-position: 0 0, 0px 0px;
}

.bg-dots {
  background-image:
    radial-gradient(#ffffff 14%, transparent 0),
    radial-gradient(#ffffff 14%, transparent 0);
  background-size: 60px 60px;
  background-position: 0 0, 0px 0px;
}

.bg-dots-blurple {
  background-image:
    radial-gradient(#312783 17%, transparent 0),
    radial-gradient(#312783 17%, transparent 0);
  background-size: 60px 60px;
  background-position: 0 0, 0px 0px;
}

.bg-dots-bigger {
  background-image:
    radial-gradient(#ffffff 19%, transparent 0),
    radial-gradient(#ffffff 19%, transparent 0);
  background-size: 60px 60px;
  background-position: 0 0, 0px 0px;
}

.my-shadow {
  box-shadow: 8px 8px 0 0 rgba(0, 0, 0, 0.2);
}

.my-shadow-sm {
  box-shadow: 4px 4px 0 0 rgba(0, 0, 0, 0.2);
}

.my-shadow-only-desktop {
  @media (max-width: 767px) { 
    box-shadow: 8px 8px 0 0 rgba(0, 0, 0, 0.2);
  }
}

.my-shadow-dark {
  box-shadow: 8px 8px 0 0 rgba(0, 0, 0, 0.6);
}

.my-shadow-lg {
  box-shadow: 12px 12px 0 0 rgba(0, 0, 0, 0.2);
}

.triangle {
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 30px 30px 0 0;
  border-color: #fff transparent transparent transparent;
}

.tooltip {
  position: relative;
  display: inline-block;
}

.tooltip .tooltiptext {
  visibility: hidden;
  width: 140px;
  background-color: #555;
  color: #fff;
  text-align: center;
  border-radius: 6px;
  padding: 5px;
  position: absolute;
  z-index: 1;
  bottom: 100%;
  left: 50%;
  margin-left: -75px;
  opacity: 0;
  transition: opacity 0.3s;
}

.tooltip .tooltiptext::after {
  content: "";
  position: absolute;
  top: 100%;
  left: 50%;
  margin-left: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: #555 transparent transparent transparent;
}

.tooltip:hover .tooltiptext {
  visibility: visible;
  opacity: 1;
}

/* Sweep To Top */
.hvr-sweep-to-top {
  display: inline-block;
  vertical-align: middle;
  -webkit-transform: perspective(1px) translateZ(0);
  transform: perspective(1px) translateZ(0);
  box-shadow: 0 0 1px rgba(0, 0, 0, 0);
  position: relative;
  -webkit-transition-property: color;
  transition-property: color;
  -webkit-transition-duration: 0.3s;
  transition-duration: 0.3s;
}
.hvr-sweep-to-top:before {
  content: "";
  position: absolute;
  z-index: -1;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: #E5D151;
  -webkit-transform: scaleY(0);
  transform: scaleY(0);
  -webkit-transform-origin: 50% 100%;
  transform-origin: 50% 100%;
  -webkit-transition-property: transform;
  transition-property: transform;
  -webkit-transition-duration: 0.3s;
  transition-duration: 0.3s;
  -webkit-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
}
.hvr-sweep-to-top:hover, .hvr-sweep-to-top:focus, .hvr-sweep-to-top:active {
  color: white;
}
.hvr-sweep-to-top:hover:before, .hvr-sweep-to-top:focus:before, .hvr-sweep-to-top:active:before {
  -webkit-transform: scaleY(1);
  transform: scaleY(1);
}

/* Bounce To Top */
.hvr-bounce-to-top {
  display: inline-block;
  vertical-align: middle;
  -webkit-transform: perspective(1px) translateZ(0);
  transform: perspective(1px) translateZ(0);
  box-shadow: 0 0 1px rgba(0, 0, 0, 0);
  position: relative;
  -webkit-transition-property: color;
  transition-property: color;
  -webkit-transition-duration: 0.3s;
  transition-duration: 0.3s;
}
.hvr-bounce-to-top:before {
  content: "";
  position: absolute;
  z-index: -1;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: #DC6660;
  -webkit-transform: scaleY(0);
  transform: scaleY(0);
  -webkit-transform-origin: 50% 100%;
  transform-origin: 50% 100%;
  -webkit-transition-property: transform;
  transition-property: transform;
  -webkit-transition-duration: 0.3s;
  transition-duration: 0.3s;
  -webkit-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
}
.hvr-bounce-to-top:hover, .hvr-bounce-to-top:focus, .hvr-bounce-to-top:active {
  color: black;
}
.hvr-bounce-to-top:hover:before, .hvr-bounce-to-top:focus:before, .hvr-bounce-to-top:active:before {
  -webkit-transform: scaleY(1);
  transform: scaleY(1);
  -webkit-transition-timing-function: cubic-bezier(0.52, 1.64, 0.37, 0.66);
  transition-timing-function: cubic-bezier(0.52, 1.64, 0.37, 0.66);
}

/* Underline From Left */
.hvr-underline-from-left {
  display: inline-block;
  vertical-align: middle;
  -webkit-transform: perspective(1px) translateZ(0);
  transform: perspective(1px) translateZ(0);
  box-shadow: 0 0 1px rgba(0, 0, 0, 0);
  position: relative;
  overflow: hidden;
}
.hvr-underline-from-left:before {
  content: "";
  position: absolute;
  z-index: -1;
  left: 0;
  right: 100%;
  bottom: 0;
  background: #E5D151;
  height: 14px;
  -webkit-transition-property: right;
  transition-property: right;
  -webkit-transition-duration: 0.2s;
  transition-duration: 0.2s;
  -webkit-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
}
.hvr-underline-from-left:hover:before, .hvr-underline-from-left:focus:before, .hvr-underline-from-left:active:before {
  right: 0;
}

.hvr-underline-from-left-thin {
  vertical-align: middle;
  -webkit-transform: perspective(1px) translateZ(0);
  transform: perspective(1px) translateZ(0);
  box-shadow: 0 0 1px rgba(0, 0, 0, 0);
  position: relative;
  overflow: hidden;
}
.hvr-underline-from-left-thin:before {
  content: "";
  position: absolute;
  z-index: -1;
  left: 0;
  right: 100%;
  bottom: 0;
  background: #E5D151;
  height: 7px;
  -webkit-transition-property: right;
  transition-property: right;
  -webkit-transition-duration: 0.2s;
  transition-duration: 0.2s;
  -webkit-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
}
.hvr-underline-from-left-thin:hover:before, .hvr-underline-from-left-thin:active:before {
  right: 0;
}

/* Sweep To Right */
.hvr-sweep-to-right {
  display: inline-block;
  vertical-align: middle;
  -webkit-transform: perspective(1px) translateZ(0);
  transform: perspective(1px) translateZ(0);
  box-shadow: 0 0 1px rgba(0, 0, 0, 0);
  position: relative;
  -webkit-transition-property: color;
  transition-property: color;
  -webkit-transition-duration: 0.3s;
  transition-duration: 0.3s;
}
.hvr-sweep-to-right:before {
  content: "";
  position: absolute;
  z-index: -1;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: #E5D151;
  -webkit-transform: scaleX(0);
  transform: scaleX(0);
  -webkit-transform-origin: 0 50%;
  transform-origin: 0 50%;
  -webkit-transition-property: transform;
  transition-property: transform;
  -webkit-transition-duration: 0.3s;
  transition-duration: 0.3s;
  -webkit-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
}
.hvr-sweep-to-right:hover, .hvr-sweep-to-right:focus, .hvr-sweep-to-right:active {
  color: white;
}
.hvr-sweep-to-right:hover:before, .hvr-sweep-to-right:focus:before, .hvr-sweep-to-right:active:before {
  -webkit-transform: scaleX(1);
  transform: scaleX(1);
}

@-webkit-keyframes hvr-buzz {
  50% {
    -webkit-transform: translateX(3px) rotate(2deg);
    transform: translateX(3px) rotate(2deg);
  }
  100% {
    -webkit-transform: translateX(-3px) rotate(-2deg);
    transform: translateX(-3px) rotate(-2deg);
  }
}
@keyframes hvr-buzz {
  50% {
    -webkit-transform: translateX(3px) rotate(2deg);
    transform: translateX(3px) rotate(2deg);
  }
  100% {
    -webkit-transform: translateX(-3px) rotate(-2deg);
    transform: translateX(-3px) rotate(-2deg);
  }
}
.hvr-buzz {
  display: inline-block;
  vertical-align: middle;
  -webkit-transform: perspective(1px) translateZ(0);
  transform: perspective(1px) translateZ(0);
  box-shadow: 0 0 1px rgba(0, 0, 0, 0);
}
.hvr-buzz:hover, .hvr-buzz:focus, .hvr-buzz:active {
  -webkit-animation-name: hvr-buzz;
  animation-name: hvr-buzz;
  -webkit-animation-duration: 0.15s;
  animation-duration: 0.15s;
  -webkit-animation-timing-function: linear;
  animation-timing-function: linear;
  -webkit-animation-iteration-count: infinite;
  animation-iteration-count: infinite;
}

.buzz {
  display: inline-block;
  vertical-align: middle;
  -webkit-transform: perspective(1px) translateZ(0);
  transform: perspective(1px) translateZ(0);
  box-shadow: 0 0 1px rgba(0, 0, 0, 0);
  -webkit-animation-name: hvr-buzz;
  animation-name: hvr-buzz;
  -webkit-animation-duration: 0.15s;
  animation-duration: 0.15s;
  -webkit-animation-timing-function: linear;
  animation-timing-function: linear;
  -webkit-animation-iteration-count: infinite;
  animation-iteration-count: infinite;
}

.hvr-grow {
  display: inline-block;
  vertical-align: middle;
  -webkit-transform: perspective(1px) translateZ(0);
  transform: perspective(1px) translateZ(0);
  box-shadow: 0 0 1px rgba(0, 0, 0, 0);
  -webkit-transition-duration: 0.3s;
  transition-duration: 0.3s;
  -webkit-transition-property: transform;
  transition-property: transform;
}
.hvr-grow:hover, .hvr-grow:focus, .hvr-grow:active {
  -webkit-transform: scale(1.1);
  transform: scale(1.1);
}

@keyframes fadeOut {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
    height: 0;
    padding: 0;
  }
}

.fade-out{
  animation: fadeOut 0.6s forwards;
  animation-delay: 3s;
}

.font-flow {
  font-family: flow;
}

@font-face {
  font-family: flow;
  src: url('../../../public/fonts/flow-block.woff') format('woff');
  font-weight: 400;
  font-style: normal;
}



</style>

<script>
  currentUser = {
    id: '<%= @session_id %>',
    currentUserName: '<%= @session.name %>',
    facilitator: '<%= @current_facilitator %>',
    votesCastIdeas: new Set(<%= @voting.concept_votes.members %>),
    votesCastIdeaBuilds: new Set(<%= @voting.concept_build_votes.members %>),
    userIsDoneVoting: '<%= @voting.done? %>'
  };

  brainstormStore = {
    state: '<%= @brainstorm.state %>',
    maxVotesPerUser: '<%= @voting.dynamic_vote_count %>'
  };

  const openModalToSetName = () => {
    if (!currentUser.currentUserName || currentUser.currentUserName == "Anonymous Brainstormer") {
      document.getElementById("modalContainer").classList.remove("hidden");
      document.getElementById("modalContainer").setAttribute("x-data", "{ 'showModal': true }");
      document.getElementById("session_name").setAttribute("value", createRandomUserName());
    }
  }

  const createRandomUserName = () => {
    const adjectives = ["Sleeping", "Hungry", "Purple", "Hairy", "Wet", "Hungarian", "Australian", "Cross-eyed", "Mind-reading", "Fierce", "Wig-wearing", "Busy", "Bingo-playing", "Talking", "Smart", "Cool", "Amazing", "Happy", "Lovely", "Tomb Raiding", "Self-aware", "Flying", "Bald", "The Best", "Space-exploring", "To-the-point", "Forgetful", "Visionary", "Well-behaved", "Totally Awesome", "Hilarious", "Mild", "Charming"]
    const nouns = ["Tiger", "Turtle", "Cat", "Sloth", "Hedgehog", "Space Explorer", "Mouse", "Hamster", "Tea Pot", "Alien", "Traveller", "Bear", "Fish", "Donkey", "Horse", "Zebra", "Lion", "Otter", "Spider", "Architect", "Surgeon", "Friend", "Coffee Cup", "Computer", "Super Hero", "Boy", "Girl", "Ant", "Dinosaur", "Bird"]

    let adjective = adjectives[Math.floor(Math.random() * adjectives.length)];
    let noun = nouns[Math.floor(Math.random() * nouns.length)];

    return `${adjective} ${noun}`
  }

  const openSendEmailModal = () => {
    document.getElementById("emailModalContainer").setAttribute("x-data", "{ 'showEmailModal': true }")
    document.getElementById("notice").innerHTML = ""
    document.getElementById("error-field-email-address").innerHTML = ""
  }

  const showCurrentUser = () => {
    let currentUserBadge = document.getElementById(currentUser.id)
    let currentUserBadgesWrapper = document.getElementById("user-list")
    currentUserBadge.parentNode.appendChild(currentUserBadge);
    currentUserBadge.lastChild.remove()
    currentUserBadge.lastChild.remove()
    currentUserBadge.classList.add("bg-black", "cursor-pointer")
    currentUserBadge.firstChild.classList.add("bg-white", "text-black")
    currentUserBadge.firstChild.classList.remove("bg-purply", "bg-greeny", "bg-yellowy", "bg-reddy", "text-white")
    currentUserBadge.lastChild.classList.add("bg-black")
    currentUserBadge.lastChild.classList.remove("bg-purply", "bg-greeny", "bg-yellowy", "bg-reddy")

    doneDivForCurrentUser = document.getElementById(`user-done-${currentUser.id}`)
    doneDivForCurrentUser.parentNode.appendChild(doneDivForCurrentUser);

    currentUserBadge.onclick = () => {
      document.getElementById("modalContainer").classList.remove("hidden");
      document.getElementById("modalContainer").setAttribute("x-data", "{ 'showModal': true }")
    }
  }

  const setCurrentUserName = (name) => {
    currentUser.currentUserName = name
  }

  const copyAction = (value) => {
    let tempInput = document.createElement("input");
    tempInput.style = "position: absolute; left: -1000px; top: -1000px";
    tempInput.value = value;
    document.body.appendChild(tempInput);
    tempInput.select();
    document.execCommand("copy");
    document.body.removeChild(tempInput);
    let tooltip = document.getElementById("myTooltip");
    tooltip.innerHTML = "Copied!";
  }

  const copyUrlMobile = (value) => {
  let tempInput = document.createElement("input");
  tempInput.style = "position: absolute; left: -1000px; top: -1000px";
  tempInput.value = value;
  document.body.appendChild(tempInput);
  tempInput.select();
  tempInput.setSelectionRange(0, 99999);
  navigator.clipboard.writeText(tempInput.value);
  tempInput.remove()
  document.getElementById("notice-mobile").innerHTML = '<div class="text-3xl bg-greeny fade-out inset-x-0 fixed text-white text-center py-4 z-50 font-bold my-shadow"><span>Brainstorm link copied to clipboard</span></div>'
}

  const copyToken = (value) => {
    let tempInput = document.createElement("input");
    tempInput.style = "position: absolute; left: -1000px; top: -1000px";
    tempInput.value = value;
    document.body.appendChild(tempInput);
    tempInput.select();
    document.execCommand("copy");
    document.body.removeChild(tempInput);
    let tooltip = document.getElementById("tooltipToken");
    tooltip.innerHTML = "Copied!";
  }

  const getURL = () => {
    return window.location.href;
  }

  const getToken = () => {
    return window.location.pathname.replace("/", "")
  }

  const outFunc = () => {
    var tooltip = document.getElementById("myTooltip");
    tooltip.innerHTML = "Copy to clipboard";
  }

  const tokenOutFunc = () => {
    var tooltip = document.getElementById("tooltipToken");
    tooltip.innerHTML = "Copy to clipboard";
  }

  const togglePdfButtonSpinner = () => {
    element1 = document.getElementById(`save-to-pdf-button-icon`);
    element2 = document.getElementById(`save-to-pdf-button-spinner`);
    element1.classList.toggle("hidden")
    element2.classList.toggle("hidden")
  }

  const clickPdfButton = () => {
    pdfButton = document.getElementById(`save-to-pdf-button`);
    pdfButton.click();
  }

  if (currentUser.userIsDoneVoting == "false") {
    document.getElementById("done-button").innerHTML = "DONE"
  } else if (currentUser.userIsDoneVoting == "true") {
    document.getElementById("done-button").innerHTML = "CHANGE VOTES"
  }
</script>

<%= javascript_pack_tag 'user_badge' %>
<%= javascript_pack_tag 'change_view_based_on_state' %>
<%= javascript_pack_tag 'validations' %>
<%= javascript_pack_tag 'show' %>
